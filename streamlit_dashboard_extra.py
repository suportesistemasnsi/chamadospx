import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from services.supabase import carregar_chamados

def dashboard():
    st.title("ğŸ“Š Dashboard de Chamados")

    # Carregar os dados reais
    df = carregar_chamados()

    if df.empty:
        st.warning("Nenhum dado disponÃ­vel para exibir no dashboard.")
        return

    # GrÃ¡fico de distribuiÃ§Ã£o por status
    chamados_por_status = df["Status"].value_counts().reset_index()
    chamados_por_status.columns = ["Status", "Quantidade"]
    fig_status = px.pie(chamados_por_status, values='Quantidade', names='Status', title="DistribuiÃ§Ã£o de Chamados")

    chamados_por_usuario = df["UsuÃ¡rio Resp"].value_counts().reset_index()
    chamados_por_usuario.columns = ["UsuÃ¡rio Resp", "Quantidade"]
    fig_usuario = px.bar(chamados_por_usuario, x='UsuÃ¡rio Resp', y='Quantidade', title="Chamados por UsuÃ¡rio", text_auto=True)

    # GrÃ¡fico de pendÃªncias
    chamados_por_pendencia = df["PendÃªncia"].value_counts().reset_index()
    chamados_por_pendencia.columns = ["PendÃªncia", "Quantidade"]
    fig_pendencia = px.bar(chamados_por_pendencia, x='PendÃªncia', y='Quantidade', title="Chamados por PendÃªncia", text_auto=True)

    # Exibir os grÃ¡ficos
    col1, col2 = st.columns(2)
    col1.plotly_chart(fig_status, use_container_width=True)
    col2.plotly_chart(fig_pendencia, use_container_width=True)
    st.plotly_chart(fig_usuario, use_container_width=True)

if __name__ == "__main__":
    dashboard()
